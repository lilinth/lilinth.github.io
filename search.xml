<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>IPv4 和 IPv6 路由管理</title>
      <link href="/2024/08/07/IPv4_and_IPv6_Routing_Tutorial/"/>
      <url>/2024/08/07/IPv4_and_IPv6_Routing_Tutorial/</url>
      
        <content type="html"><![CDATA[<h1 id="IPv4-和-IPv6-路由管理"><a href="#IPv4-和-IPv6-路由管理" class="headerlink" title="IPv4 和 IPv6 路由管理"></a>IPv4 和 IPv6 路由管理</h1><p>Linux 系统中 IPv4 和 IPv6 路由的基本操作，包括查看、添加和删除路由。</p><h2 id="IPv4-路由"><a href="#IPv4-路由" class="headerlink" title="IPv4 路由"></a>IPv4 路由</h2><h3 id="1-查看-IPv4-路由表"><a href="#1-查看-IPv4-路由表" class="headerlink" title="1. 查看 IPv4 路由表"></a>1. 查看 IPv4 路由表</h3><p>使用下面的命令来查看当前的 IPv4 路由表：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip route</span><br></pre></td></tr></table></figure><h3 id="2-添加-IPv4-路由"><a href="#2-添加-IPv4-路由" class="headerlink" title="2. 添加 IPv4 路由"></a>2. 添加 IPv4 路由</h3><p>根据网络配置需求，可以使用以下命令添加路由：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ip route add [目的网络/掩码] via [网关地址] dev [网卡设备名]</span><br></pre></td></tr></table></figure><p>例如，如果想要所有发往 <code>192.168.1.0/24</code> 网络的数据包都通过网关 <code>192.168.0.1</code> 和网卡 <code>eth0</code> 发送，可以使用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ip route add 192.168.1.0/24 via 192.168.0.1 dev eth0</span><br></pre></td></tr></table></figure><h3 id="3-删除-IPv4-路由"><a href="#3-删除-IPv4-路由" class="headerlink" title="3. 删除 IPv4 路由"></a>3. 删除 IPv4 路由</h3><p>从路由表中删除一条路由，可以使用如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ip route del [目的网络/掩码]</span><br></pre></td></tr></table></figure><p>例如，删除之前添加的路由：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ip route del 192.168.1.0/24</span><br></pre></td></tr></table></figure><h2 id="IPv6-路由"><a href="#IPv6-路由" class="headerlink" title="IPv6 路由"></a>IPv6 路由</h2><h3 id="1-查看-IPv6-路由表"><a href="#1-查看-IPv6-路由表" class="headerlink" title="1. 查看 IPv6 路由表"></a>1. 查看 IPv6 路由表</h3><p>使用下面的命令来查看当前的 IPv6 路由表：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip -6 route</span><br></pre></td></tr></table></figure><h3 id="2-添加-IPv6-路由"><a href="#2-添加-IPv6-路由" class="headerlink" title="2. 添加 IPv6 路由"></a>2. 添加 IPv6 路由</h3><p>根据网络配置需求，可以使用以下命令添加路由：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ip -6 route add [目的地址/前缀] via [网关地址] dev [网卡设备名]</span><br></pre></td></tr></table></figure><p>例如，如果想要所有发往 <code>2001:db8::/32</code> 网络的数据包都通过网关 <code>fe80::1</code> 和网卡 <code>eth0</code> 发送，可以使用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ip -6 route add 2001:db8::/32 via fe80::1 dev eth0</span><br></pre></td></tr></table></figure><h3 id="3-删除-IPv6-路由"><a href="#3-删除-IPv6-路由" class="headerlink" title="3. 删除 IPv6 路由"></a>3. 删除 IPv6 路由</h3><p>从路由表中删除一条路由，可以使用如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ip -6 route del [目的地址/前缀]</span><br></pre></td></tr></table></figure><p>例如，删除之前添加的路由：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ip -6 route del 2001:db8::/32</span><br></pre></td></tr></table></figure><h2 id="持久化路由设置"><a href="#持久化路由设置" class="headerlink" title="持久化路由设置"></a>持久化路由设置</h2><p>为了使路由设置在系统重启后依然生效，可以将命令添加到启动脚本中，或者在配置文件中设置。这具体依赖于使用的 Linux 发行版。</p><h2 id="调试和故障排查"><a href="#调试和故障排查" class="headerlink" title="调试和故障排查"></a>调试和故障排查</h2><p>使用以下命令可以帮助调试和确认路由设置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ip route show</span><br><span class="line">ip -6 route show</span><br></pre></td></tr></table></figure><p>或者，使用 <code>ping</code> 或 <code>ping6</code> 测试网络连通性：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ping [IPv4地址]</span><br><span class="line">ping6 [IPv6地址]</span><br></pre></td></tr></table></figure><p>确保有适当的权限执行这些命令，特别是使用 <code>sudo</code> 来获取必要的管理员权限。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Tool </tag>
            
            <tag> Network </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何在 Linux 系统中进入 S0、S1、S2、S3、S4 和 S5 模式</title>
      <link href="/2024/08/06/linux_power_state_mode/"/>
      <url>/2024/08/06/linux_power_state_mode/</url>
      
        <content type="html"><![CDATA[<h1 id="如何在-Linux-系统中进入-S0、S1、S2、S3、S4-和-S5-模式"><a href="#如何在-Linux-系统中进入-S0、S1、S2、S3、S4-和-S5-模式" class="headerlink" title="如何在 Linux 系统中进入 S0、S1、S2、S3、S4 和 S5 模式"></a>如何在 Linux 系统中进入 S0、S1、S2、S3、S4 和 S5 模式</h1><h2 id="检查系统支持的电源模式"><a href="#检查系统支持的电源模式" class="headerlink" title="检查系统支持的电源模式"></a>检查系统支持的电源模式</h2><p>在进入这些模式之前，可以使用以下命令来检查系统支持哪些电源状态：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /sys/power/state</span><br></pre></td></tr></table></figure><p>该命令的输出可能包括：</p><ul><li><code>freeze</code>：冻结当前任务，不关闭任何设备。</li><li><code>standby</code>：进入 S1 模式。</li><li><code>mem</code>：进入 S3 模式。</li><li><code>disk</code>：进入 S4 模式，即休眠，将内存内容保存到磁盘。</li></ul><h2 id="各电源模式简介"><a href="#各电源模式简介" class="headerlink" title="各电源模式简介"></a>各电源模式简介</h2><ul><li>S0（工作状态）：系统处于完全开机状态，所有部件都在运行。</li><li>S1（待机）：CPU 停止执行指令，但内存和其他关键部件保持供电。</li><li>S2（待机）：CPU 和系统缓存停止供电，但内存保持供电。</li><li>S3（挂起到内存）：系统状态保存到内存中，除内存外的所有部件都断电。</li><li>S4（休眠）：系统状态保存到硬盘，所有部件断电。系统恢复时从硬盘读取状态。</li><li>S5（软关机）：系统完全关机，但电源仍然供电，可以通过电源按钮启动。</li></ul><h2 id="进入各电源模式的命令"><a href="#进入各电源模式的命令" class="headerlink" title="进入各电源模式的命令"></a>进入各电源模式的命令</h2><ul><li><p>S0 模式（工作状态）<br>无需特殊命令，系统开机时即处于 S0 模式。</p></li><li><p>S1 模式（Standby）<br>使用 echo 命令：</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> standby | sudo <span class="built_in">tee</span> /sys/power/state</span><br></pre></td></tr></table></figure><ul><li>S2 模式（待机）<br>请注意，S2 模式在很多系统上并不常用或不被支持。如果系统支持，可以尝试：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> standby | sudo <span class="built_in">tee</span> /sys/power/state</span><br></pre></td></tr></table></figure><ul><li>S3 模式（Suspend-to-RAM）</li></ul><p><strong>方法一：使用 systemctl 命令</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">suspend</span></span><br></pre></td></tr></table></figure><p><strong>方法二：使用 echo 命令</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> mem | sudo <span class="built_in">tee</span> /sys/power/state</span><br></pre></td></tr></table></figure><ul><li>S4 模式（休眠）<br>使用 systemctl 命令：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl hibernate</span><br></pre></td></tr></table></figure><p>或者使用 echo 命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> disk | sudo <span class="built_in">tee</span> /sys/power/state</span><br></pre></td></tr></table></figure><ul><li>S5 模式（软关机）<br>使用 systemctl 命令：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl poweroff</span><br></pre></td></tr></table></figure><h2 id="示例操作"><a href="#示例操作" class="headerlink" title="示例操作"></a>示例操作</h2><p><strong>1. 检查系统支持的电源模式：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cat</span> /sys/power/state</span><br><span class="line">freeze standby mem disk</span><br></pre></td></tr></table></figure><p><strong>2. 进入 S1 模式：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> standby | sudo <span class="built_in">tee</span> /sys/power/state</span><br></pre></td></tr></table></figure><p><strong>3. 进入 S3 模式：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo systemctl <span class="built_in">suspend</span></span><br></pre></td></tr></table></figure><p><strong>4. 进入 S4 模式：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo systemctl hibernate</span><br></pre></td></tr></table></figure><p><strong>5. 进入 S5 模式：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo systemctl poweroff</span><br></pre></td></tr></table></figure><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>硬件支持：确保你的硬件支持相应的电源模式。</p><p>数据保存：进入这些模式前保存所有未保存的工作，以避免数据丢失。</p><p>驱动支持：有些系统和设备驱动可能对某些电源模式支持不完善，可能会导致恢复时出现问题。 </p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 连接 USB 串口教程</title>
      <link href="/2024/08/05/Linux_USB_Serial_Tutorial/"/>
      <url>/2024/08/05/Linux_USB_Serial_Tutorial/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux-连接-USB-串口教程"><a href="#Linux-连接-USB-串口教程" class="headerlink" title="Linux 连接 USB 串口教程"></a>Linux 连接 USB 串口教程</h1><p>在Linux系统中，连接USB串口设备通常需要以下几个步骤：</p><h2 id="1-确认系统识别到USB串口设备"><a href="#1-确认系统识别到USB串口设备" class="headerlink" title="1. 确认系统识别到USB串口设备"></a>1. 确认系统识别到USB串口设备</h2><p>插入USB串口设备后，可以使用 <code>dmesg</code> 命令来查看系统是否识别到该设备。输入以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dmesg | grep ttyUSB</span><br></pre></td></tr></table></figure><p>应该看到类似以下的输出：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[12345.678901] usb 1-1: cp210x converter now attached to ttyUSB0</span><br></pre></td></tr></table></figure><p>这表示系统已将USB串口设备识别为 <code>/dev/ttyUSB0</code>。</p><h2 id="2-安装必要的软件"><a href="#2-安装必要的软件" class="headerlink" title="2. 安装必要的软件"></a>2. 安装必要的软件</h2><p>使用USB串口设备通常需要安装 <code>screen</code> 或 <code>minicom</code> 等终端仿真软件。你可以使用以下命令来安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install screen</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install minicom</span><br></pre></td></tr></table></figure><h2 id="3-连接到USB串口设备"><a href="#3-连接到USB串口设备" class="headerlink" title="3. 连接到USB串口设备"></a>3. 连接到USB串口设备</h2><h3 id="使用-screen"><a href="#使用-screen" class="headerlink" title="使用 screen"></a>使用 screen</h3><p>可以使用 <code>screen</code> 命令连接到USB串口设备。例如，如果设备被识别为 <code>/dev/ttyUSB0</code>，可以使用以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">screen /dev/ttyUSB0 115200</span><br></pre></td></tr></table></figure><p>这里的 <code>115200</code> 是波特率，根据你的设备配置进行调整。</p><h3 id="使用-minicom"><a href="#使用-minicom" class="headerlink" title="使用 minicom"></a>使用 minicom</h3><p>首先，配置 <code>minicom</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo minicom -s</span><br></pre></td></tr></table></figure><p>在配置界面中，选择“串口设置”，然后设置串口设备为 <code>/dev/ttyUSB0</code>，并设置相应的波特率。</p><p>配置完成后，选择“保存并退出”。然后可以使用以下命令连接：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">minicom</span><br></pre></td></tr></table></figure><h2 id="4-退出连接"><a href="#4-退出连接" class="headerlink" title="4. 退出连接"></a>4. 退出连接</h2><h3 id="使用-screen-1"><a href="#使用-screen-1" class="headerlink" title="使用 screen"></a>使用 screen</h3><p>要退出 <code>screen</code> 会话，按 <code>Ctrl-a</code> 然后按 <code>k</code>，再按 <code>y</code> 确认。</p><h3 id="使用-minicom-1"><a href="#使用-minicom-1" class="headerlink" title="使用 minicom"></a>使用 minicom</h3><p>要退出 <code>minicom</code>，按 <code>Ctrl-a</code> 然后按 <code>q</code>，再选择“是”确认退出。</p><hr><p>以上就是在Linux系统中连接USB串口设备的基本步骤。</p><h2 id="DB9-串口线序"><a href="#DB9-串口线序" class="headerlink" title="DB9 串口线序"></a>DB9 串口线序</h2><h3 id="DB9公头（Male）针脚排列"><a href="#DB9公头（Male）针脚排列" class="headerlink" title="DB9公头（Male）针脚排列"></a>DB9公头（Male）针脚排列</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">5  4  3  2  1</span><br><span class="line"> ●  ●  ●  ●  ●</span><br><span class="line">  9  8  7  6</span><br><span class="line"> ●  ●  ●  ● </span><br></pre></td></tr></table></figure><h3 id="DB9母头（Female）针脚排列"><a href="#DB9母头（Female）针脚排列" class="headerlink" title="DB9母头（Female）针脚排列"></a>DB9母头（Female）针脚排列</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1  2  3  4  5</span><br><span class="line"> ●  ●  ●  ●  ●</span><br><span class="line">  6  7  8  9</span><br><span class="line"> ●  ●  ●  ● </span><br></pre></td></tr></table></figure><h3 id="针脚定义"><a href="#针脚定义" class="headerlink" title="针脚定义"></a>针脚定义</h3><table><thead><tr><th>针脚编号</th><th>信号名称</th><th>描述</th></tr></thead><tbody><tr><td>1</td><td>DCD (Data Carrier Detect)</td><td>数据载波检测</td></tr><tr><td>2</td><td>RXD (Receive Data)</td><td>接收数据</td></tr><tr><td>3</td><td>TXD (Transmit Data)</td><td>发送数据</td></tr><tr><td>4</td><td>DTR (Data Terminal Ready)</td><td>数据终端准备好</td></tr><tr><td>5</td><td>GND (Ground)</td><td>信号地</td></tr><tr><td>6</td><td>DSR (Data Set Ready)</td><td>数据设置准备好</td></tr><tr><td>7</td><td>RTS (Request to Send)</td><td>请求发送</td></tr><tr><td>8</td><td>CTS (Clear to Send)</td><td>清除发送</td></tr><tr><td>9</td><td>RI (Ring Indicator)</td><td>振铃指示</td></tr></tbody></table><h3 id="常用连接"><a href="#常用连接" class="headerlink" title="常用连接"></a>常用连接</h3><h4 id="1-直连线（也称为直通线）"><a href="#1-直连线（也称为直通线）" class="headerlink" title="1. 直连线（也称为直通线）"></a>1. 直连线（也称为直通线）</h4><ul><li>这种连接方式通常用于PC与调制解调器（Modem）之间的连接。</li><li>直连线的针脚对应关系如下：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">DB9公头 (Male)       DB9母头 (Female)</span><br><span class="line">2 (RXD)  &lt;--------&gt;  2 (RXD)</span><br><span class="line">3 (TXD)  &lt;--------&gt;  3 (TXD)</span><br><span class="line">5 (GND)  &lt;--------&gt;  5 (GND)</span><br><span class="line">7 (RTS)  &lt;--------&gt;  7 (RTS)</span><br><span class="line">8 (CTS)  &lt;--------&gt;  8 (CTS)</span><br></pre></td></tr></table></figure></li></ul><h4 id="2-交叉线（也称为null-modem线）"><a href="#2-交叉线（也称为null-modem线）" class="headerlink" title="2. 交叉线（也称为null modem线）"></a>2. 交叉线（也称为null modem线）</h4><ul><li>这种连接方式用于PC与PC之间，或PC与串口设备之间的直接通信。</li><li>交叉线的针脚对应关系如下：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">DB9公头 (Male)       DB9公头 (Male)</span><br><span class="line">2 (RXD)  &lt;--------&gt;  3 (TXD)</span><br><span class="line">3 (TXD)  &lt;--------&gt;  2 (RXD)</span><br><span class="line">5 (GND)  &lt;--------&gt;  5 (GND)</span><br><span class="line">7 (RTS)  &lt;--------&gt;  8 (CTS)</span><br><span class="line">8 (CTS)  &lt;--------&gt;  7 (RTS)</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Tool </tag>
            
            <tag> Serial </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RHEL9 网络配置</title>
      <link href="/2024/07/29/RHEL9_network_config/"/>
      <url>/2024/07/29/RHEL9_network_config/</url>
      
        <content type="html"><![CDATA[<h1 id="RHEL9-网络配置"><a href="#RHEL9-网络配置" class="headerlink" title="RHEL9 网络配置"></a>RHEL9 网络配置</h1><h2 id="开关interface和profile"><a href="#开关interface和profile" class="headerlink" title="开关interface和profile"></a>开关interface和profile</h2><ol><li><p><strong>获取网络状态</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nmcli connection</span><br><span class="line">NAME           UUID                                  TYPE      DEVICE</span><br><span class="line">Profile 2      21906cd8-c04d-45fd-9b7f-e6e85c43f891  ethernet  enP21p1s0f1np1</span><br><span class="line">enP21s17f1np1  f9ed821f-f3db-46ea-90fd-13dd74dc5587  ethernet  --</span><br></pre></td></tr></table></figure></li><li><p><strong>ifdown profile</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# ifdown &quot;Profile 2&quot;</span><br><span class="line">Connection &#x27;Profile 2&#x27; successfully deactivated (D-Bus active path: /org/freedesktop/NetworkManager/ActiveConnection/7)</span><br></pre></td></tr></table></figure></li><li><p><strong>link down interface</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# ip link set enP21p1s0f1np1 down</span><br></pre></td></tr></table></figure></li><li><p><strong>link up interface</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# ip link set enP21p1s0f1np1 up</span><br></pre></td></tr></table></figure></li><li><p><strong>ifup interface</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# ifup &quot;Profile 2&quot;</span><br><span class="line">Connection successfully activated (D-Bus active path: /org/freedesktop/NetworkManager/ActiveConnection/8)</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Tool </tag>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>/etc/fstab 文件配置教程</title>
      <link href="/2024/07/28/fstab_config/"/>
      <url>/2024/07/28/fstab_config/</url>
      
        <content type="html"><![CDATA[<h1 id="etc-fstab-文件配置教程"><a href="#etc-fstab-文件配置教程" class="headerlink" title="/etc/fstab 文件配置教程"></a><code>/etc/fstab</code> 文件配置教程</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p><code>/etc/fstab</code> 文件用于定义系统在启动时如何自动挂载各种文件系统。这个文件在 Linux 系统中非常重要，它决定了系统启动时哪些设备将被挂载到哪些挂载点。</p><h2 id="文件结构"><a href="#文件结构" class="headerlink" title="文件结构"></a>文件结构</h2><p><code>/etc/fstab</code> 文件的每一行代表一个文件系统的挂载配置，每行包含六个字段：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;文件系统&gt; &lt;挂载点&gt; &lt;类型&gt; &lt;选项&gt; &lt;转储&gt; &lt;自检&gt;</span><br></pre></td></tr></table></figure><h3 id="字段解释"><a href="#字段解释" class="headerlink" title="字段解释"></a>字段解释</h3><ol><li><p><strong>文件系统（File System）：</strong></p><ul><li>设备文件或分区。例如：<code>/dev/sda1</code>，<code>UUID=xxxx-xxxx</code>，<code>LABEL=home</code>。</li></ul></li><li><p><strong>挂载点（Mount Point）：</strong></p><ul><li>文件系统挂载到的目录。例如：<code>/</code>，<code>/home</code>，<code>/mnt/backup</code>。</li></ul></li><li><p><strong>文件系统类型（Filesystem Type）：</strong></p><ul><li>指定文件系统类型。例如：<code>ext4</code>，<code>ntfs</code>，<code>vfat</code>。</li></ul></li><li><p><strong>挂载选项（Mount Options）：</strong></p><ul><li>挂载时的选项，多个选项使用逗号分隔。例如：<code>defaults</code>，<code>ro</code>（只读），<code>noexec</code>（不可执行）。</li></ul></li><li><p><strong>转储频率（Dump Frequency）：</strong></p><ul><li>数字，表示是否需要备份。通常为 <code>0</code>（不备份）或 <code>1</code>（备份）。</li></ul></li><li><p><strong>自检顺序（Fsck Order）：</strong></p><ul><li>数字，表示启动时文件系统检查的顺序。根文件系统通常为 <code>1</code>，其他为 <code>2</code>，不检查则为 <code>0</code>。</li></ul></li></ol><h2 id="示例配置"><a href="#示例配置" class="headerlink" title="示例配置"></a>示例配置</h2><p>以下是一个典型的 <code>/etc/fstab</code> 文件示例：</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># &lt;文件系统&gt;  &lt;挂载点&gt;    &lt;类型&gt; &lt;选项&gt;     &lt;转储&gt; &lt;自检&gt;</span></span><br><span class="line">/dev/sda1     /           ext4   defaults    1      1</span><br><span class="line">/dev/sda2     /home       ext4   defaults    1      2</span><br><span class="line">/dev/sdb1     /mnt/backup ntfs   defaults    0      0</span><br><span class="line">UUID=xxxx-xxxx /mnt/data  ext4   defaults    0      2</span><br><span class="line">LABEL=usbdrv  /mnt/usb    vfat   noauto,user 0      0</span><br></pre></td></tr></table></figure><h3 id="解释"><a href="#解释" class="headerlink" title="解释"></a>解释</h3><ul><li><code>/dev/sda1</code> 挂载到根目录 <code>/</code>，文件系统类型为 <code>ext4</code>，使用默认选项，转储频率为 <code>1</code>，自检顺序为 <code>1</code>。</li><li><code>/dev/sda2</code> 挂载到 <code>/home</code>，文件系统类型为 <code>ext4</code>，使用默认选项，转储频率为 <code>1</code>，自检顺序为 <code>2</code>。</li><li><code>/dev/sdb1</code> 挂载到 <code>/mnt/backup</code>，文件系统类型为 <code>ntfs</code>，使用默认选项，不进行转储和自检。</li><li>使用 <code>UUID=xxxx-xxxx</code> 指定的分区挂载到 <code>/mnt/data</code>，文件系统类型为 <code>ext4</code>，使用默认选项，不进行转储，自检顺序为 <code>2</code>。</li><li>使用 <code>LABEL=usbdrv</code> 指定的设备挂载到 <code>/mnt/usb</code>，文件系统类型为 <code>vfat</code>，不自动挂载，允许用户挂载，不进行转储和自检。</li></ul><h2 id="配置步骤"><a href="#配置步骤" class="headerlink" title="配置步骤"></a>配置步骤</h2><h3 id="步骤-1：备份现有的-etc-fstab"><a href="#步骤-1：备份现有的-etc-fstab" class="headerlink" title="步骤 1：备份现有的 /etc/fstab"></a>步骤 1：备份现有的 <code>/etc/fstab</code></h3><p>在修改之前，备份现有的 <code>/etc/fstab</code> 文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">cp</span> /etc/fstab /etc/fstab.bak</span><br></pre></td></tr></table></figure><h3 id="步骤-2：编辑-etc-fstab"><a href="#步骤-2：编辑-etc-fstab" class="headerlink" title="步骤 2：编辑 /etc/fstab"></a>步骤 2：编辑 <code>/etc/fstab</code></h3><p>使用文本编辑器打开 <code>/etc/fstab</code> 文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/fstab</span><br></pre></td></tr></table></figure><h3 id="步骤-3：添加新的挂载条目"><a href="#步骤-3：添加新的挂载条目" class="headerlink" title="步骤 3：添加新的挂载条目"></a>步骤 3：添加新的挂载条目</h3><p>根据需要添加新的挂载条目。例如：</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UUID=xxxx-xxxx /mnt/data  ext4   defaults    0      2</span><br></pre></td></tr></table></figure><h3 id="步骤-4：保存并退出"><a href="#步骤-4：保存并退出" class="headerlink" title="步骤 4：保存并退出"></a>步骤 4：保存并退出</h3><p>编辑完成后，保存文件并退出编辑器。对于 <code>nano</code> 编辑器，按 <code>Ctrl+O</code> 保存文件，然后按 <code>Ctrl+X</code> 退出。</p><h3 id="步骤-5：验证配置"><a href="#步骤-5：验证配置" class="headerlink" title="步骤 5：验证配置"></a>步骤 5：验证配置</h3><p>使用以下命令验证 <code>fstab</code> 文件的配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mount -a</span><br></pre></td></tr></table></figure><p>如果没有错误信息，说明配置正确。</p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ul><li>确保每个字段之间用空格或制表符分隔。</li><li>使用 <code>UUID</code> 或 <code>LABEL</code> 可以避免设备名称变化带来的问题。</li><li>错误的 <code>fstab</code> 配置可能导致系统无法启动，修改前务必备份。</li></ul><h2 id="常见挂载选项"><a href="#常见挂载选项" class="headerlink" title="常见挂载选项"></a>常见挂载选项</h2><ul><li><code>defaults</code>：使用默认挂载选项 <code>rw, suid, dev, exec, auto, nouser, async</code>。</li><li><code>ro</code>：只读挂载。</li><li><code>rw</code>：读写挂载。</li><li><code>noauto</code>：不自动挂载。</li><li><code>user</code>：允许普通用户挂载。</li><li><code>nouser</code>：只允许 root 用户挂载。</li><li><code>noexec</code>：禁止执行二进制文件。</li></ul><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul><li><code>man fstab</code>：查看 <code>fstab</code> 的手册页。</li><li><code>man mount</code>：查看 <code>mount</code> 命令的手册页。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Tool </tag>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FIO 测试</title>
      <link href="/2024/07/21/fio_test/"/>
      <url>/2024/07/21/fio_test/</url>
      
        <content type="html"><![CDATA[<h1 id="FIO-测试"><a href="#FIO-测试" class="headerlink" title="FIO 测试"></a>FIO 测试</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>   <strong>Debian</strong><br>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install fio</span><br></pre></td></tr></table></figure><br>   <strong>RHEL9</strong><br>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dnf install fio</span><br></pre></td></tr></table></figure></p><h2 id="执行"><a href="#执行" class="headerlink" title="执行"></a>执行</h2><ol><li>TBD</li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Tool </tag>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Iperf/iperf3 测试</title>
      <link href="/2024/07/21/iperf_network_test/"/>
      <url>/2024/07/21/iperf_network_test/</url>
      
        <content type="html"><![CDATA[<h1 id="Iperf-iperf3-测试"><a href="#Iperf-iperf3-测试" class="headerlink" title="Iperf&#x2F;iperf3 测试"></a>Iperf&#x2F;iperf3 测试</h1><blockquote><p>Iperf 和 iperf3 是不同的software，一般推荐使用ipef.</p></blockquote><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>   <strong>Debian</strong><br>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt install iperf</span><br><span class="line">apt install iperf3</span><br></pre></td></tr></table></figure><br>   <strong>RHEL9</strong><br>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dnf install iperf</span><br><span class="line">dnf install iperf3</span><br></pre></td></tr></table></figure></p><h2 id="执行"><a href="#执行" class="headerlink" title="执行"></a>执行</h2><ol><li>TBD</li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Tool </tag>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux Proxy 设置</title>
      <link href="/2024/07/21/linux_proxy_config/"/>
      <url>/2024/07/21/linux_proxy_config/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux-Proxy-设置"><a href="#Linux-Proxy-设置" class="headerlink" title="Linux Proxy 设置"></a>Linux Proxy 设置</h1><h2 id="Terminal-全局-http-proxy-只在当前Session生效"><a href="#Terminal-全局-http-proxy-只在当前Session生效" class="headerlink" title="Terminal 全局 http proxy (只在当前Session生效)"></a>Terminal 全局 http proxy (只在当前Session生效)</h2><h3 id="启用"><a href="#启用" class="headerlink" title="启用"></a>启用</h3>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> http_proxy=<span class="string">&quot;http://&lt;ip address&gt;:&lt;port&gt;&quot;</span></span><br><span class="line"><span class="built_in">export</span> https_proxy=<span class="string">&quot;http://&lt;ip address&gt;:&lt;port&gt;&quot;</span></span><br></pre></td></tr></table></figure><h3 id="禁用"><a href="#禁用" class="headerlink" title="禁用"></a>禁用</h3>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">unset</span> http_proxy</span><br><span class="line"><span class="built_in">unset</span> https_proxy</span><br></pre></td></tr></table></figure><h2 id="Proxychains"><a href="#Proxychains" class="headerlink" title="Proxychains"></a>Proxychains</h2><h3 id="安装-预先手动配置Terminal-proxy"><a href="#安装-预先手动配置Terminal-proxy" class="headerlink" title="安装 (预先手动配置Terminal proxy)"></a>安装 (预先手动配置Terminal proxy)</h3><ol><li><p>Debian</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install proxychains</span><br></pre></td></tr></table></figure></li><li><p>RHEL9</p><p><strong>x86_64</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dnf install https://dl.fedoraproject.org/pub/epel/9/Everything/aarch64/Packages/p/proxychains-ng-4.17-1.el9.x86_64.rpm</span><br></pre></td></tr></table></figure><p><strong>ARM64</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dnf install https://dl.fedoraproject.org/pub/epel/9/Everything/aarch64/Packages/p/proxychains-ng-4.17-1.el9.aarch64.rpm</span><br></pre></td></tr></table></figure></li></ol><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><ol><li>编辑 &#x2F;etc&#x2F;proxychains.conf</li><li>找到quiet_mode，去掉前面的#<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Quiet mode (no output from library)</span><br><span class="line">quiet_mode</span><br></pre></td></tr></table></figure></li><li>滚动到最下，注释原有的sock4<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[ProxyList]</span><br><span class="line"># add proxy here ...</span><br><span class="line"># meanwile</span><br><span class="line"># defaults set to &quot;tor&quot;</span><br><span class="line">#socks4         127.0.0.1 9050</span><br></pre></td></tr></table></figure></li><li>增加要使用的代理<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[ProxyList]</span><br><span class="line">http         192.168.1.147 58080</span><br></pre></td></tr></table></figure></li></ol><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><ol><li>在要连接网络的命令或者脚本名之前加上proxychains即可<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">proxychains apt update</span><br><span class="line">proxychains apt install ipmitool</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Tool </tag>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Red Hat Enterprise Linux 9 YUM 本地源配置</title>
      <link href="/2024/07/16/rhel9_yum_repo/"/>
      <url>/2024/07/16/rhel9_yum_repo/</url>
      
        <content type="html"><![CDATA[<h1 id="准备安装ISO和挂载"><a href="#准备安装ISO和挂载" class="headerlink" title="准备安装ISO和挂载"></a>准备安装ISO和挂载</h1><h2 id="Mount-RHEL9-iso"><a href="#Mount-RHEL9-iso" class="headerlink" title="Mount RHEL9.iso"></a>Mount RHEL9.iso</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount RHEL9.iso /mnt</span><br></pre></td></tr></table></figure><h1 id="创建repo"><a href="#创建repo" class="headerlink" title="创建repo"></a>创建repo</h1><h2 id="增加一个iso-repo到-etc-yum-repos-d-修改baseurl路径为iso-mount的文件夹"><a href="#增加一个iso-repo到-etc-yum-repos-d-修改baseurl路径为iso-mount的文件夹" class="headerlink" title="增加一个iso.repo到&#x2F;etc&#x2F;yum.repos.d, 修改baseurl路径为iso mount的文件夹."></a>增加一个iso.repo到&#x2F;etc&#x2F;yum.repos.d, 修改baseurl路径为iso mount的文件夹.</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/yum.repos.d/iso.repo</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[BaseOS]</span><br><span class="line">name=BaseOS Packages Red Hat Enterprise Linux 9</span><br><span class="line">metadata_expire=-1</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=1</span><br><span class="line">baseurl=file:///mnt</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release</span><br><span class="line"></span><br><span class="line">[AppStream]</span><br><span class="line">name=AppStream Packages Red Hat Enterprise Linux 9</span><br><span class="line">metadata_expire=-1</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=1</span><br><span class="line">baseurl=file:///mnt</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release</span><br></pre></td></tr></table></figure><h1 id="YUM-更新和安装"><a href="#YUM-更新和安装" class="headerlink" title="YUM 更新和安装"></a>YUM 更新和安装</h1><h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum update</span><br></pre></td></tr></table></figure><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install ipmitool</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Tool </tag>
            
            <tag> 测试 </tag>
            
            <tag> RHEL </tag>
            
            <tag> YUM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ARM 平台FFTs 测试</title>
      <link href="/2024/07/03/ARM_FFTs_test/"/>
      <url>/2024/07/03/ARM_FFTs_test/</url>
      
        <content type="html"><![CDATA[<h1 id="ARM-平台FFTs-测试教程"><a href="#ARM-平台FFTs-测试教程" class="headerlink" title="ARM 平台FFTs 测试教程"></a>ARM 平台FFTs 测试教程</h1><p>在ARM平台上面，无法使用prime95&#x2F;mprime, 因为它们只支持x86平台。在这里，我们使用<a href="https://github.com/primesearch/Mlucas">Mlcaus</a>.<br>这里以Debian为例(不同的OS步骤会有不同)</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ol><li><p><strong>安装相关依赖</strong><br>Debian</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt update</span><br><span class="line">apt install build-essential libgmp-dev libhwloc-dev git clang</span><br></pre></td></tr></table></figure><p>RHEL9</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dnf group install &quot;Development Tools&quot;</span><br><span class="line">dnf install gmp-devel hwloc-devel clang git</span><br></pre></td></tr></table></figure></li><li><p><strong>clone mlucas project 到本地</strong><br>(也可以直接去release下载source code package)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/primesearch/Mlucas.git</span><br></pre></td></tr></table></figure></li><li><p><strong>编译</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd Mlucas</span><br><span class="line">export CC=clang</span><br><span class="line">bash makemake.sh use_hwloc</span><br></pre></td></tr></table></figure></li><li><p><strong>执行</strong></p><p>在编译完成之后，编译好的文件位于obj*的目录里面，具体目录名称取决于编译的选项。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd obj</span><br><span class="line">./Mlucas</span><br></pre></td></tr></table></figure></li><li><p><strong>参数定义</strong><br>在编译好且确认文件Mlucas可以正常执行之后，我们就可以开始来定义要测试的参数, 具体可以参考<a href="https://www.mersenneforum.org/mayer/README.html">Mlucas help</a>.</p></li></ol><h2 id="执行FFTs-测试"><a href="#执行FFTs-测试" class="headerlink" title="执行FFTs 测试"></a>执行FFTs 测试</h2><ol><li><strong>获取测试机器CPU信息</strong><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lscpu</span><br></pre></td></tr></table></figure>示例输出:<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CPU(s):              32</span><br><span class="line">Thread(s) per core:  1</span><br><span class="line">NUMA node0 CPU(s):   0-15</span><br><span class="line">NUMA node1 CPU(s):   16-32</span><br></pre></td></tr></table></figure>从上面可以看到，CPU有2颗，每颗CPU有16个core，每个cord只有一个thread, NUMA分为2个node，每个node 16个core.</li><li><strong>指定测试参数</strong><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">./Mlucas -s m -cpu 0:3</span><br><span class="line">./Mlucas -s m -cpu 4:7</span><br><span class="line">./Mlucas -s m -cpu 8:11</span><br><span class="line">./Mlucas -s m -cpu 12:15</span><br><span class="line">./Mlucas -s m -cpu 15:23</span><br><span class="line">./Mlucas -s m -cpu 24:27</span><br><span class="line">./Mlucas -s m -cpu 28:31</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Tool </tag>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Memtester 测试</title>
      <link href="/2024/07/03/memtester_test/"/>
      <url>/2024/07/03/memtester_test/</url>
      
        <content type="html"><![CDATA[<h1 id="Memtester-测试"><a href="#Memtester-测试" class="headerlink" title="Memtester 测试"></a>Memtester 测试</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ol><li><strong>apt 安装</strong><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install memtester</span><br></pre></td></tr></table></figure></li></ol><h2 id="执行"><a href="#执行" class="headerlink" title="执行"></a>执行</h2><ol><li><strong>跑满当前可用内存</strong><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">memtester $(grep MemAvail /proc/meminfo | awk &#x27;&#123;print $2/1024&#125;&#x27;)</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Tool </tag>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>stressapptest 测试</title>
      <link href="/2024/07/03/stressapptest_test/"/>
      <url>/2024/07/03/stressapptest_test/</url>
      
        <content type="html"><![CDATA[<h1 id="stressapptest-测试"><a href="#stressapptest-测试" class="headerlink" title="stressapptest 测试"></a>stressapptest 测试</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ol><li><p><strong>Debian apt 安装</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install stressapptest</span><br></pre></td></tr></table></figure><p><strong>RHEL9 dnf 安装</strong><br>ARM64</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dnf install https://dl.fedoraproject.org/pub/epel/9/Everything/aarch64/Packages/s/stressapptest-1.0.9-1.20220222git6714c57.el9.aarch64.rpm</span><br></pre></td></tr></table></figure><p>x86_64</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dnf install https://dl.fedoraproject.org/pub/epel/9/Everything/aarch64/Packages/s/stressapptest-1.0.9-1.20220222git6714c57.el9.x86_64.rpm</span><br></pre></td></tr></table></figure></li><li><p><strong>编译安装</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">apt install build-essential</span><br><span class="line">git clone https://github.com/stressapptest/stressapptest.git</span><br><span class="line">cd stressapptest</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure></li></ol><h2 id="执行"><a href="#执行" class="headerlink" title="执行"></a>执行</h2><ol><li><strong>查看帮忙信息</strong><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stressapptest -h</span><br></pre></td></tr></table></figure></li><li><strong>执行内存测试300秒</strong><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stressapptest -s 300</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Tool </tag>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 基本命令操作</title>
      <link href="/2024/07/02/linux_common_commands/"/>
      <url>/2024/07/02/linux_common_commands/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux-基本命令操作"><a href="#Linux-基本命令操作" class="headerlink" title="Linux 基本命令操作"></a>Linux 基本命令操作</h1><h2 id="文件和目录操作"><a href="#文件和目录操作" class="headerlink" title="文件和目录操作"></a>文件和目录操作</h2><ol><li><p><strong>列出目录内容</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span></span><br></pre></td></tr></table></figure><p><strong>输出示例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file1.txt  file2.txt  directory1  directory2</span><br></pre></td></tr></table></figure></li><li><p><strong>切换到指定目录</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> directory1</span><br></pre></td></tr></table></figure><p><strong>输出示例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(无输出，仅切换目录)</span><br></pre></td></tr></table></figure></li><li><p><strong>显示当前工作目录</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">pwd</span></span><br></pre></td></tr></table></figure><p><strong>输出示例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/home/user/directory1</span><br></pre></td></tr></table></figure></li><li><p><strong>创建新目录</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> new_directory</span><br></pre></td></tr></table></figure><p><strong>输出示例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(无输出，仅创建目录)</span><br></pre></td></tr></table></figure></li><li><p><strong>删除文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> file1.txt</span><br></pre></td></tr></table></figure><p><strong>输出示例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(无输出，仅删除文件)</span><br></pre></td></tr></table></figure></li></ol><h2 id="文件内容查看和编辑"><a href="#文件内容查看和编辑" class="headerlink" title="文件内容查看和编辑"></a>文件内容查看和编辑</h2><ol><li><p><strong>显示文件内容</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> file2.txt</span><br></pre></td></tr></table></figure><p><strong>输出示例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">This is the content of file2.txt.</span><br></pre></td></tr></table></figure></li><li><p><strong>分页显示文件内容</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">more file2.txt</span><br></pre></td></tr></table></figure><p><strong>输出示例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">This is the content of file2.txt.</span><br><span class="line">--More-- (按空格键翻页)</span><br></pre></td></tr></table></figure></li><li><p><strong>编辑文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano file2.txt</span><br></pre></td></tr></table></figure><p><strong>输出示例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(进入 nano 编辑界面)</span><br></pre></td></tr></table></figure></li></ol><h2 id="文件权限和所有权"><a href="#文件权限和所有权" class="headerlink" title="文件权限和所有权"></a>文件权限和所有权</h2><ol><li><p><strong>更改文件权限</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> 755 file2.txt</span><br></pre></td></tr></table></figure><p><strong>输出示例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(无输出，仅更改权限)</span><br></pre></td></tr></table></figure></li><li><p><strong>更改文件所有者</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">chown</span> newuser file2.txt</span><br></pre></td></tr></table></figure><p><strong>输出示例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(无输出，仅更改所有者)</span><br></pre></td></tr></table></figure></li></ol><h2 id="系统管理"><a href="#系统管理" class="headerlink" title="系统管理"></a>系统管理</h2><ol><li><p><strong>显示当前运行的进程</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps</span><br></pre></td></tr></table></figure><p><strong>输出示例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> PID TTY          TIME CMD</span><br><span class="line">1056 pts/0    00:00:00 bash</span><br><span class="line">1082 pts/0    00:00:00 ps</span><br></pre></td></tr></table></figure></li><li><p><strong>实时显示系统资源使用情况</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">top</span><br></pre></td></tr></table></figure><p><strong>输出示例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">top - 10:45:14 up 2 days,  4:22,  1 user,  load average: 0.00, 0.01, 0.05</span><br><span class="line">Tasks: 118 total,   1 running, 117 sleeping,   0 stopped,   0 zombie</span><br><span class="line">%Cpu(s):  0.7 us,  0.3 sy,  0.0 ni, 99.0 <span class="built_in">id</span>,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st</span><br><span class="line">KiB Mem :  2048576 total,   192652 free,  1298964 used,   556960 buff/cache</span><br><span class="line">KiB Swap:  1048572 total,  1048572 free,        0 used.   652632 avail Mem </span><br></pre></td></tr></table></figure></li><li><p><strong>清除journalctl系统日志</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">journalctl --flush --rotate --vacuum-time=1s</span><br></pre></td></tr></table></figure></li><li><p><strong>显示磁盘使用情况</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">df</span> -h</span><br></pre></td></tr></table></figure><p><strong>输出示例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Filesystem      Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/sda1        20G  9.3G  9.1G  51% /</span><br><span class="line">tmpfs           996M  1.2M  995M   1% /run</span><br></pre></td></tr></table></figure></li><li><p><strong>关机或重启系统</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo shutdown -h now</span><br></pre></td></tr></table></figure><p><strong>输出示例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(系统会显示关机通知并在几秒钟后关机)</span><br></pre></td></tr></table></figure></li></ol><h2 id="网络相关"><a href="#网络相关" class="headerlink" title="网络相关"></a>网络相关</h2><ol><li><p><strong>检测网络连接</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping google.com</span><br></pre></td></tr></table></figure><p><strong>输出示例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PING google.com (172.217.164.110) 56(84) bytes of data.</span><br><span class="line">64 bytes from lga25s61-in-f14.1e100.net (172.217.164.110): icmp_seq=1 ttl=54 time=10.8 ms</span><br></pre></td></tr></table></figure></li><li><p><strong>设置 terminal proxy</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> http_proxy=<span class="string">&quot;http://192.168.50.1:58080&quot;</span></span><br><span class="line"><span class="built_in">export</span> https_proxy=<span class="string">&quot;http://192.168.50.1:58080&quot;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>使用 proxychains proxy</strong></p><p>A. 安装 proxychains</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install proxychains</span><br></pre></td></tr></table></figure><p>B. 修改配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/proxychains.conf</span><br><span class="line"><span class="comment"># Quiet mode (no output from library)</span></span><br><span class="line">quiet_mode</span><br><span class="line"></span><br><span class="line">[ProxyList]</span><br><span class="line"><span class="comment"># add proxy here ...</span></span><br><span class="line"><span class="comment"># meanwile</span></span><br><span class="line"><span class="comment"># defaults set to &quot;tor&quot;</span></span><br><span class="line"><span class="comment">#socks4         127.0.0.1 9050</span></span><br><span class="line">http    192.168.50.1    58080</span><br></pre></td></tr></table></figure><p>C. 使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxychains apt update</span><br></pre></td></tr></table></figure></li></ol><h2 id="软件安装相关"><a href="#软件安装相关" class="headerlink" title="软件安装相关"></a>软件安装相关</h2><ol><li><p><strong>apt 安装软件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt update</span><br><span class="line">apt install stress</span><br></pre></td></tr></table></figure></li><li><p><strong>apt 卸载软件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt remove stress</span><br></pre></td></tr></table></figure></li><li><p><strong>apt 搜索软件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt search stress</span><br></pre></td></tr></table></figure></li><li><p><strong>dpkg 查看已安装软件信息</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg -l</span><br></pre></td></tr></table></figure></li><li><p><strong>编译安装</strong></p><p>A. 安装编译组件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install -y build-essential</span><br></pre></td></tr></table></figure><p>B. 下载并解压 source code</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://jaist.dl.sourceforge.net/project/smartmontools/smartmontools/7.4/smartmontools-7.4.tar.gz</span><br><span class="line">tar xvf smartmontools-7.4.tar.gz</span><br></pre></td></tr></table></figure><p>C. 编译</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> smartmontools-7.4/</span><br><span class="line">./configure</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><p>D. 检查是否成功编译安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">smartctl -v</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>虚拟机迁移指南</title>
      <link href="/2024/06/30/VM_Migration_Guide_Full/"/>
      <url>/2024/06/30/VM_Migration_Guide_Full/</url>
      
        <content type="html"><![CDATA[<h1 id="虚拟机迁移指南"><a href="#虚拟机迁移指南" class="headerlink" title="虚拟机迁移指南"></a>虚拟机迁移指南</h1><h2 id="1-确保虚拟机是持久化的"><a href="#1-确保虚拟机是持久化的" class="headerlink" title="1. 确保虚拟机是持久化的"></a>1. 确保虚拟机是持久化的</h2><p>虚拟机必须是持久化的才能进行迁移。如果虚拟机是临时的（transient），需要先将其配置为持久化。</p><h3 id="将临时虚拟机转换为持久化虚拟机"><a href="#将临时虚拟机转换为持久化虚拟机" class="headerlink" title="将临时虚拟机转换为持久化虚拟机"></a>将临时虚拟机转换为持久化虚拟机</h3><p>如果虚拟机是临时的，可以使用以下命令将其转换为持久化：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo virsh dumpxml mgtest &gt; /tmp/mgtest.xml</span><br><span class="line">sudo virsh define /tmp/mgtest.xml</span><br></pre></td></tr></table></figure><h2 id="2-在线迁移虚拟机"><a href="#2-在线迁移虚拟机" class="headerlink" title="2. 在线迁移虚拟机"></a>2. 在线迁移虚拟机</h2><h3 id="确保虚拟机磁盘缓存设置为-none-或-directsync"><a href="#确保虚拟机磁盘缓存设置为-none-或-directsync" class="headerlink" title="确保虚拟机磁盘缓存设置为 none 或 directsync"></a>确保虚拟机磁盘缓存设置为 none 或 directsync</h3><p>编辑虚拟机的 XML 配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo virsh edit mgtest</span><br></pre></td></tr></table></figure><p>在 <code>&lt;disk&gt;</code> 部分中添加或修改 <code>&lt;driver&gt;</code> 部分，将 <code>cache</code> 设置为 <code>none</code> 或 <code>directsync</code>，例如：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">disk</span> <span class="attr">type</span>=<span class="string">&#x27;file&#x27;</span> <span class="attr">device</span>=<span class="string">&#x27;disk&#x27;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">driver</span> <span class="attr">name</span>=<span class="string">&#x27;qemu&#x27;</span> <span class="attr">type</span>=<span class="string">&#x27;qcow2&#x27;</span> <span class="attr">cache</span>=<span class="string">&#x27;none&#x27;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">file</span>=<span class="string">&#x27;/mnt/nfs_share/mgtest.qcow2&#x27;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">target</span> <span class="attr">dev</span>=<span class="string">&#x27;vda&#x27;</span> <span class="attr">bus</span>=<span class="string">&#x27;virtio&#x27;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">address</span> <span class="attr">type</span>=<span class="string">&#x27;pci&#x27;</span> <span class="attr">domain</span>=<span class="string">&#x27;0x0000&#x27;</span> <span class="attr">bus</span>=<span class="string">&#x27;0x00&#x27;</span> <span class="attr">slot</span>=<span class="string">&#x27;0x04&#x27;</span> <span class="attr">function</span>=<span class="string">&#x27;0x0&#x27;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">disk</span>&gt;</span></span><br></pre></td></tr></table></figure><p>保存并退出编辑器。</p><h3 id="重启虚拟机"><a href="#重启虚拟机" class="headerlink" title="重启虚拟机"></a>重启虚拟机</h3><p>为了使配置生效，需要重启虚拟机：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo virsh shutdown mgtest</span><br><span class="line">sudo virsh start mgtest</span><br></pre></td></tr></table></figure><h3 id="进行在线迁移"><a href="#进行在线迁移" class="headerlink" title="进行在线迁移"></a>进行在线迁移</h3><p>使用以下命令进行在线迁移：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo virsh migrate --live mgtest qemu+ssh://192.168.50.235/system</span><br></pre></td></tr></table></figure><h2 id="3-离线迁移虚拟机"><a href="#3-离线迁移虚拟机" class="headerlink" title="3. 离线迁移虚拟机"></a>3. 离线迁移虚拟机</h2><h3 id="确保虚拟机是持久化的"><a href="#确保虚拟机是持久化的" class="headerlink" title="确保虚拟机是持久化的"></a>确保虚拟机是持久化的</h3><p>如果虚拟机是临时的，可以使用以下命令将其转换为持久化：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo virsh dumpxml mgtest &gt; /tmp/mgtest.xml</span><br><span class="line">sudo virsh define /tmp/mgtest.xml</span><br></pre></td></tr></table></figure><h3 id="关闭虚拟机"><a href="#关闭虚拟机" class="headerlink" title="关闭虚拟机"></a>关闭虚拟机</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo virsh shutdown mgtest</span><br></pre></td></tr></table></figure><h3 id="进行离线迁移"><a href="#进行离线迁移" class="headerlink" title="进行离线迁移"></a>进行离线迁移</h3><p>执行离线迁移命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo virsh migrate --offline --persistent mgtest qemu+ssh://192.168.50.235/system</span><br></pre></td></tr></table></figure><h2 id="4-示例流程"><a href="#4-示例流程" class="headerlink" title="4. 示例流程"></a>4. 示例流程</h2><h3 id="检查虚拟机状态"><a href="#检查虚拟机状态" class="headerlink" title="检查虚拟机状态"></a>检查虚拟机状态</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo virsh list --all</span><br></pre></td></tr></table></figure><h3 id="将临时虚拟机转换为持久化（如果需要）"><a href="#将临时虚拟机转换为持久化（如果需要）" class="headerlink" title="将临时虚拟机转换为持久化（如果需要）"></a>将临时虚拟机转换为持久化（如果需要）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo virsh dumpxml mgtest &gt; /tmp/mgtest.xml</span><br><span class="line">sudo virsh define /tmp/mgtest.xml</span><br></pre></td></tr></table></figure><h3 id="关闭虚拟机-1"><a href="#关闭虚拟机-1" class="headerlink" title="关闭虚拟机"></a>关闭虚拟机</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo virsh shutdown mgtest</span><br></pre></td></tr></table></figure><h3 id="进行在线迁移-1"><a href="#进行在线迁移-1" class="headerlink" title="进行在线迁移"></a>进行在线迁移</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo virsh migrate --live mgtest qemu+ssh://192.168.50.235/system</span><br></pre></td></tr></table></figure><h3 id="进行离线迁移-1"><a href="#进行离线迁移-1" class="headerlink" title="进行离线迁移"></a>进行离线迁移</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo virsh migrate --offline --persistent mgtest qemu+ssh://192.168.50.235/system</span><br></pre></td></tr></table></figure><h2 id="5-NFS-配置步骤"><a href="#5-NFS-配置步骤" class="headerlink" title="5. NFS 配置步骤"></a>5. NFS 配置步骤</h2><h3 id="服务器端配置"><a href="#服务器端配置" class="headerlink" title="服务器端配置"></a>服务器端配置</h3><ol><li><p><strong>安装NFS服务器：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install nfs-kernel-server</span><br></pre></td></tr></table></figure></li><li><p><strong>创建共享目录：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">mkdir</span> -p /srv/nfs_share</span><br><span class="line">sudo <span class="built_in">chown</span> nobody:nogroup /srv/nfs_share</span><br><span class="line">sudo <span class="built_in">chmod</span> 777 /srv/nfs_share</span><br></pre></td></tr></table></figure></li><li><p><strong>配置NFS导出：</strong></p><p>编辑 <code>/etc/exports</code> 文件，添加共享目录的配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/exports</span><br></pre></td></tr></table></figure><p>添加以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/srv/nfs_share 192.168.50.0/24(rw,sync,no_subtree_check,no_root_squash)</span><br></pre></td></tr></table></figure></li><li><p><strong>导出NFS共享目录：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo exportfs -ra</span><br></pre></td></tr></table></figure></li><li><p><strong>启动并启用NFS服务：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart nfs-kernel-server</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> nfs-kernel-server</span><br></pre></td></tr></table></figure></li></ol><h3 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h3><ol><li><p><strong>安装NFS客户端：</strong></p><p>在两个主机上分别安装NFS客户端：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install nfs-common</span><br></pre></td></tr></table></figure></li><li><p><strong>创建挂载点目录：</strong></p><p>在两个主机上分别创建挂载点目录，例如 <code>/mnt/nfs_share</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">mkdir</span> -p /mnt/nfs_share</span><br></pre></td></tr></table></figure></li><li><p><strong>挂载NFS共享目录：</strong></p><p>在两个主机上分别执行以下命令，将NFS共享目录挂载到本地目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mount -t nfs -o rw 192.168.50.100:/srv/nfs_share /mnt/nfs_share</span><br></pre></td></tr></table></figure></li><li><p><strong>配置自动挂载（可选）：</strong></p><p>为了在系统重启后自动挂载NFS共享目录，可以编辑 <code>/etc/fstab</code> 文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/fstab</span><br></pre></td></tr></table></figure><p>添加以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">192.168.50.100:/srv/nfs_share /mnt/nfs_share nfs defaults 0 0</span><br></pre></td></tr></table></figure></li></ol><h3 id="验证配置"><a href="#验证配置" class="headerlink" title="验证配置"></a>验证配置</h3><ol><li><p><strong>验证挂载：</strong></p><p>在两个主机上分别执行以下命令，确认NFS共享目录是否成功挂载：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">df</span> -h</span><br></pre></td></tr></table></figure></li><li><p><strong>测试读写权限：</strong></p><p>在两个主机上分别尝试在挂载的共享目录中创建文件，确保读写权限正常：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">touch</span> /mnt/nfs_share/testfile</span><br><span class="line"><span class="built_in">ls</span> -l /mnt/nfs_share/testfile</span><br></pre></td></tr></table></figure></li></ol><p>通过以上步骤，可以配置和验证NFS共享目录，以便在虚拟机迁移过程中使用。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 虚拟机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>禁用 Debian 系统的屏幕锁定和自动睡眠</title>
      <link href="/2024/06/30/disable_screen_lock_and_sleep/"/>
      <url>/2024/06/30/disable_screen_lock_and_sleep/</url>
      
        <content type="html"><![CDATA[<h1 id="禁用-Debian-系统的屏幕锁定和自动睡眠"><a href="#禁用-Debian-系统的屏幕锁定和自动睡眠" class="headerlink" title="禁用 Debian 系统的屏幕锁定和自动睡眠"></a>禁用 Debian 系统的屏幕锁定和自动睡眠</h1><p>本文档提供了禁用 Debian 系统屏幕锁定和自动睡眠功能的详细步骤。</p><h2 id="1-禁用屏幕锁定"><a href="#1-禁用屏幕锁定" class="headerlink" title="1. 禁用屏幕锁定"></a>1. 禁用屏幕锁定</h2><p>首先，确保屏幕锁定被禁用。你可以使用以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gsettings <span class="built_in">set</span> org.gnome.desktop.screensaver lock-enabled <span class="literal">false</span></span><br><span class="line">gsettings <span class="built_in">set</span> org.gnome.desktop.screensaver idle-activation-enabled <span class="literal">false</span></span><br></pre></td></tr></table></figure><h2 id="2-禁用系统睡眠"><a href="#2-禁用系统睡眠" class="headerlink" title="2. 禁用系统睡眠"></a>2. 禁用系统睡眠</h2><p>要禁用系统的自动睡眠功能，可以通过 <code>systemd</code> 的配置文件来实现。编辑 <code>/etc/systemd/logind.conf</code> 文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/systemd/logind.conf</span><br></pre></td></tr></table></figure><p>找到并修改以下行：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#HandleLidSwitch=suspend</span></span><br><span class="line"><span class="attr">HandleLidSwitch</span>=ignore</span><br><span class="line"><span class="comment">#HandleLidSwitchDocked=ignore</span></span><br><span class="line"><span class="attr">HandleLidSwitchDocked</span>=ignore</span><br><span class="line"><span class="comment">#HandleSuspendKey=suspend</span></span><br><span class="line"><span class="attr">HandleSuspendKey</span>=ignore</span><br><span class="line"><span class="comment">#HandleHibernateKey=hibernate</span></span><br><span class="line"><span class="attr">HandleHibernateKey</span>=ignore</span><br><span class="line"><span class="comment">#HandleLidSwitchExternalPower=suspend</span></span><br><span class="line"><span class="attr">HandleLidSwitchExternalPower</span>=ignore</span><br><span class="line"><span class="comment">#HandleLidSwitchDockedExternalPower=ignore</span></span><br><span class="line"><span class="attr">HandleLidSwitchDockedExternalPower</span>=ignore</span><br></pre></td></tr></table></figure><p>保存文件并重启 <code>systemd-logind</code> 服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart systemd-logind</span><br></pre></td></tr></table></figure><h2 id="3-禁用-GNOME-电源设置中的自动睡眠"><a href="#3-禁用-GNOME-电源设置中的自动睡眠" class="headerlink" title="3. 禁用 GNOME 电源设置中的自动睡眠"></a>3. 禁用 GNOME 电源设置中的自动睡眠</h2><p>打开终端，使用以下命令禁用 GNOME 电源设置中的自动睡眠：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gsettings <span class="built_in">set</span> org.gnome.settings-daemon.plugins.power sleep-inactive-ac-timeout 0</span><br><span class="line">gsettings <span class="built_in">set</span> org.gnome.settings-daemon.plugins.power sleep-inactive-battery-timeout 0</span><br></pre></td></tr></table></figure><h2 id="4-确认配置"><a href="#4-确认配置" class="headerlink" title="4. 确认配置"></a>4. 确认配置</h2><p>再次检查这些配置是否已经生效：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gsettings get org.gnome.desktop.screensaver lock-enabled</span><br><span class="line">gsettings get org.gnome.desktop.screensaver idle-activation-enabled</span><br><span class="line">gsettings get org.gnome.settings-daemon.plugins.power sleep-inactive-ac-timeout</span><br><span class="line">gsettings get org.gnome.settings-daemon.plugins.power sleep-inactive-battery-timeout</span><br></pre></td></tr></table></figure><h2 id="5-检查日志信息"><a href="#5-检查日志信息" class="headerlink" title="5. 检查日志信息"></a>5. 检查日志信息</h2><p>如果问题依旧存在，请检查系统日志以获取更多信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">journalctl -xe</span><br></pre></td></tr></table></figure><p>通过以上步骤，你应该能够成功禁用 Debian 系统中的屏幕锁定和自动睡眠功能。如果需要更多帮助，请提供更详细的信息以便进一步排查。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World!</title>
      <link href="/2024/06/30/hello-world/"/>
      <url>/2024/06/30/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> template </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>POST TEMPLATE</title>
      <link href="/2024/06/30/post_template/"/>
      <url>/2024/06/30/post_template/</url>
      
        <content type="html"><![CDATA[<p>写法解释<br>title【必需】文章标题<br>date【必需】文章创建日期<br>updated【可选】文章更新日期<br>tags【可选】文章标签<br>categories【可选】文章分类<br>keywords【可选】文章关键字<br>description【可选】文章描述<br>top_img【可选】文章顶部图片<br>cover【可选】文章缩略图(如果没有设置top_img,文章页顶部将显示缩略图，可设为false&#x2F;图片地址&#x2F;留空)<br>comments【可选】显示文章评论模块(默认 true)<br>toc【可选】显示文章TOC(默认为设置中toc的enable配置)<br>toc_number【可选】显示toc_number(默认为设置中toc的number配置)<br>toc_style_simple【可选】显示 toc 简洁模式<br>copyright【可选】显示文章版权模块(默认为设置中post_copyright的enable配置)<br>copyright_author【可选】文章版权模块的文章作者<br>copyright_author_href【可选】文章版权模块的文章作者链接<br>copyright_url【可选】文章版权模块的文章连结链接<br>copyright_info【可选】文章版权模块的版权声明文字<br>mathjax【可选】显示mathjax(当设置 mathjax 的 per_page: false 时，才需要配置，默认 false )<br>katex【可选】显示 katex (当设置 katex 的 per_page: false 时，才需要配置，默认 false )<br>aplayer【可选】在需要的页面加载 aplayer 的 js 和 css,请参考文章下面的音乐 配置<br>highlight_shrink【可选】配置代码框是否展开(true&#x2F;false)(默认为设置中 highlight_shrink 的配置)<br>aside【可选】显示侧边栏 (默认 true)<br>abcjs【可选】加载 abcjs (当设置 abcjs 的 per_page: false 时，才需要配置，默认 false )</p><p>作者: Jerry<br>連結: <a href="https://butterfly.js.org/posts/dc584b87/#Post-Front-matter">https://butterfly.js.org/posts/dc584b87/#Post-Front-matter</a><br>來源: Butterfly<br>著作權歸作者所有。商業轉載請聯繫作者獲得授權，非商業轉載請註明出處。</p>]]></content>
      
      
      
        <tags>
            
            <tag> template </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo Template</title>
      <link href="/2024/06/28/README/"/>
      <url>/2024/06/28/README/</url>
      
        <content type="html"><![CDATA[<img src="https://raw.githubusercontent.com/hexojs/logo/master/hexo-logo-avatar.png" alt="Hexo logo" width="100" height="100" align="right" /><h1 id="Hexo-Template"><a href="#Hexo-Template" class="headerlink" title="Hexo Template"></a>Hexo Template</h1><blockquote><p>A fast, simple &amp; powerful blog framework, powered by <a href="https://nodejs.org/">Node.js</a>. Here is the template of it.</p></blockquote><p><a href="https://mmdjiji.github.io/hexo-template">Demo</a> |<br><a href="https://hexo.io/">Official Website</a> |<br><a href="https://hexo.io/docs/">Documentation</a> |<br><a href="https://github.com/mmdjiji/hexo-template">GitHub</a></p><h2 id="Get-Started"><a href="#Get-Started" class="headerlink" title="Get Started"></a>Get Started</h2><p>There are two lines to modify in <code>_config.yml</code>:</p><ol><li><p>Set your site url at <strong>line 16</strong>. For example, if you use GitHub Page, set url as <code>https://username.github.io/project</code>:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">url:</span> <span class="string">https://jiji.pro/hexo-template</span></span><br></pre></td></tr></table></figure></li><li><p>Set your project name at <strong>line 107</strong>, if your project name is <code>username</code> or <code>username.github.io</code>, just remove it at the end of <code>_config.yml</code>:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">root:</span> <span class="string">/hexo-template</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="CI-CD"><a href="#CI-CD" class="headerlink" title="CI&#x2F;CD"></a>CI&#x2F;CD</h2><p>This repository uses GitHub Actions for CI&#x2F;CD. You don’t need to build your documents manually. Just commit your documents (then run <code>git push</code>), and then turn on the GitHub Pages in the settings to access your online documents. (For this demo is <a href="https://mmdjiji.github.io/hexo-template">https://mmdjiji.github.io/hexo-template</a>)</p><h2 id="Hexo-Features"><a href="#Hexo-Features" class="headerlink" title="Hexo Features"></a>Hexo Features</h2><ul><li>Blazing fast generating</li><li>Support for GitHub Flavored Markdown and most Octopress plugins</li><li>One-command deploy to GitHub Pages, Heroku, etc.</li><li>Powerful API for limitless extensibility</li><li>Hundreds of <a href="https://hexo.io/themes/">themes</a> &amp; <a href="https://hexo.io/plugins/">plugins</a></li></ul><h2 id="Commands"><a href="#Commands" class="headerlink" title="Commands"></a>Commands</h2><p><strong>Install Hexo</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-cli -g</span><br></pre></td></tr></table></figure><p>Install with <a href="https://brew.sh/">brew</a> on macOS and Linux:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew install hexo</span><br></pre></td></tr></table></figure><p><strong>Setup your blog</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init blog</span><br><span class="line">$ <span class="built_in">cd</span> blog</span><br></pre></td></tr></table></figure><p><strong>Start the server</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p><strong>Create a new post</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;Hello Hexo&quot;</span></span><br></pre></td></tr></table></figure><p><strong>Generate static files</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><h2 id="More-Information"><a href="#More-Information" class="headerlink" title="More Information"></a>More Information</h2><ul><li>Read the <a href="https://hexo.io/">documentation</a></li><li>Visit the <a href="https://github.com/hexojs/awesome-hexo">Awesome Hexo</a> list</li><li>Find solutions in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a></li><li>Join discussion on <a href="https://groups.google.com/group/hexo">Google Group</a>, <a href="https://discord.gg/teM2Anj">Discord</a>, <a href="https://gitter.im/hexojs/hexo">Gitter</a> or <a href="https://t.me/hexojs">Telegram</a></li><li>See the <a href="https://hexo.io/plugins/">plugin list</a> and the <a href="https://hexo.io/themes/">theme list</a> on wiki</li><li>Follow <a href="https://twitter.com/hexojs">@hexojs</a> for latest news</li></ul><h2 id="License"><a href="#License" class="headerlink" title="License"></a>License</h2><p>Follows <a href="https://github.com/hexojs/hexo">hexojs&#x2F;hexo</a> , use <a href="LICENSE">MIT License</a>.</p><p><a href="https://app.fossa.com/projects/git%2Bgithub.com%2Fhexojs%2Fhexo?ref=badge_large"><img src="https://app.fossa.com/api/projects/git%2Bgithub.com%2Fhexojs%2Fhexo.svg?type=large" alt="FOSSA Status"></a></p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Template </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
